using System;
using System.IO;

namespace MagicKeys
{

public static partial class Ini
{

public static string IniReadold(string GetFile, string GetSection, string GetKey)
{
int LineSection = 0;
int End = 0;
string Error = string.Empty;
try
{
if (IniFileExists(GetFile) == false)
{
MagicKeys.MKDebugForm("FileNotFound|"+GetFile);
return null;
}
string[] AllLines = File.ReadAllLines(GetFile);
for (int ILine = 0; ILine <= AllLines.Length-1; ILine++)
{
if (AllLines[ILine].StartsWith(":") == true || AllLines[ILine].StartsWith("#") == true || string.IsNullOrWhiteSpace(AllLines[ILine]))
{
continue;
}

if (AllLines[ILine].Trim() == "["+GetSection+"]")
{
LineSection = ILine;
break;
}
else if (AllLines[ILine].Trim() != "["+GetSection+"]" && ILine == AllLines.Length-1)
{
LineSection = ILine+1;
Error = T._("Section not found");
throw new Exception();
}
}
for (int EndSection = LineSection+1; EndSection < AllLines.Length; EndSection++)
{
if (AllLines[EndSection].StartsWith(":") == true || AllLines[EndSection].StartsWith("#") == true || string.IsNullOrWhiteSpace(AllLines[EndSection]))
{
continue;
}

if (AllLines[EndSection].Contains("[") || EndSection == AllLines.Length-1)
{
End = EndSection;
break;
}
}
for (int Start = LineSection+1; Start <= End; Start++)
{
if (AllLines[Start].StartsWith(":") == true || AllLines[Start].StartsWith("#") == true || string.IsNullOrWhiteSpace(AllLines[Start]))
{
continue;
}

if (AllLines[Start].Contains("[") == true)
{
continue;
}

string[] KeyValue = AllLines[Start].Split("=", 2);
if (KeyValue[0].Trim() == GetKey)
{
if (KeyValue.Length == 2)
{
return KeyValue[1].Trim();
}
else
{
LineSection = Start+1;
Error = T._("The value is not correct");
throw new Exception();
}
}
else if (KeyValue[0].Trim() != GetKey && Start == End)
{
LineSection = Start+1;
Error = T._("Key not found");
throw new Exception();
}
}
Error = T._("Error reading file");
throw new Exception();
}
catch(Exception)
{
MagicKeys.MKDebugForm("IniRead|"+LineSection.ToString()+"|"+GetFile+"|"+GetSection+"|"+GetKey+"|"+Error);
return null;
}
}	
}
}